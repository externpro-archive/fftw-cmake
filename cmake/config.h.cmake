include(CheckFunctionExists)
include(CheckIncludeFile)
include(CheckSymbolExists)
include(CheckTypeSize)
# CRAY_STACKSEG_END
# C_ALLOCA
set(DISABLE_FORTRAN 1)
# F77_DUMMY_MAIN
# F77_FUNC
# F77_FUNC_
# F77_FUNC_EQUIV
# FC_DUMMY_MAIN_EQ_F77
set(FFTW_CC ${CMAKE_C_COMPILER})
# FFTW_RANDOM_ESTIMATOR
CHECK_FUNCTION_EXISTS(abort HAVE_ABORT)
#CHECK_FUNCTION_EXISTS(alloca HAVE_ALLOCA)
#CHECK_INCLUDE_FILE(alloca.h HAVE_ALLOCA_H)
#CHECK_FUNCTION_EXISTS(BSDgettimeofday HAVE_BSDGETTIMEOFDAY)
#CHECK_FUNCTION_EXISTS(clock_gettime HAVE_CLOCK_GETTIME)
CHECK_FUNCTION_EXISTS(cosl HAVE_COSL) # fftw-3.3-libs defined 1
#CHECK_INCLUDE_FILE(c_asm.h HAVE_C_ASM_H)
CHECK_SYMBOL_EXISTS(cosl math.h HAVE_DECL_COSL)
CHECK_SYMBOL_EXISTS(drand48 stdlib.h HAVE_DECL_DRAND48)
CHECK_SYMBOL_EXISTS(memalign stdlib.h;malloc.h HAVE_DECL_MEMALIGN)
CHECK_SYMBOL_EXISTS(posix_memalign stdlib.h HAVE_DECL_POSIX_MEMALIGN)
CHECK_SYMBOL_EXISTS(sinl math.h HAVE_DECL_SINL)
CHECK_SYMBOL_EXISTS(sinq math.h HAVE_DECL_SINQ)
CHECK_SYMBOL_EXISTS(srand48 stdlib.h HAVE_DECL_SRAND48)
#CHECK_INCLUDE_FILE(dlfcn.h HAVE_DLFCN_H)
CHECK_FUNCTION_EXISTS(drand48 HAVE_DRAND48)
CHECK_FUNCTION_EXISTS(gethrtime HAVE_GETHRTIME)
#CHECK_FUNCTION_EXISTS(gettimeofday HAVE_GETTIMEOFDAY)
# HAVE_HRTIME_T
#CHECK_INCLUDE_FILE(intrinsics.h HAVE_INTRINSICS_H)
#CHECK_INCLUDE_FILE(inttypes.h HAVE_INTTYPES_H)
#CHECK_FUNCTION_EXISTS(isnan HAVE_ISNAN)
#CHECK_INCLUDE_FILE(libintl.h HAVE_LIBINTL_H)
# HAVE_LIBM
# HAVE_LIBQUADMATH
CHECK_INCLUDE_FILE(limits.h HAVE_LIMITS_H)
CHECK_TYPE_SIZE("long double" LONG_DOUBLE) # HAVE_LONG_DOUBLE holds existence of type
#CHECK_FUNCTION_EXISTS(mach_absolute_time HAVE_MACH_ABSOLUTE_TIME)
#CHECK_INCLUDE_FILE(mach/mach_time.h HAVE_MACH_MACH_TIME_H)
CHECK_INCLUDE_FILE(malloc.h HAVE_MALLOC_H)
#CHECK_FUNCTION_EXISTS(memalign HAVE_MEMALIGN)
CHECK_INCLUDE_FILE(memory.h HAVE_MEMORY_H)
CHECK_FUNCTION_EXISTS(memset HAVE_MEMSET)
# HAVE_MIPS_ZBUS_TIMER
# HAVE_MPI
# HAVE_NEON
include(FindOpenMP)
set(HAVE_OPENMP OPENMP_FOUND)
if(OPENMP_FOUND)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
endif()
#CHECK_FUNCTION_EXISTS(posix_memalign HAVE_POSIX_MEMALIGN)
# HAVE_PTHREAD
# HAVE_READ_REAL_TEIM
CHECK_FUNCTION_EXISTS(sinl HAVE_SINL) # fftw-3.3-libs defined 1
#CHECK_FUNCTION_EXISTS(snprintf HAVE_SNPRINTF)
CHECK_FUNCTION_EXISTS(sqrt HAVE_SQRT)
if(FFTW_LDOUBLE)
  set(HAVE_SSE2)
else()
  set(HAVE_SSE2 1)
  if(MSVC)
    add_definitions(/arch:SSE2)
  endif()
endif()
CHECK_INCLUDE_FILE(stddef.h HAVE_STDDEF_H)
CHECK_INCLUDE_FILE(stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILE(stdlib.h HAVE_STDLIB_H)
#CHECK_INCLUDE_FILE(strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILE(string.h HAVE_STRING_H)
#CHECK_FUNCTION_EXISTS(sysctl HAVE_SYSCTL)
CHECK_INCLUDE_FILE(sys/stat.h HAVE_SYS_STAT_H)
#CHECK_INCLUDE_FILE(sys/sysctl.h HAVE_SYS_SYSCTL_H)
#CHECK_INCLUDE_FILE(sys/time.h HAVE_SYS_TIME_H)
CHECK_INCLUDE_FILE(sys/types.h HAVE_SYS_TYPES_H)
CHECK_FUNCTION_EXISTS(tanl HAVE_TANL) # fftw-3.3-libs defined 1
# HAVE_THREADS
#CHECK_FUNCTION_EXISTS(time_base_to_time HAVE_TIME_BASE_TO_TIME)
CHECK_TYPE_SIZE(uintptr_t UINTPTR_T) # HAVE_UINTPTR_T holds existence of type
#CHECK_INCLUDE_FILE(unistd.h HAVE_UNISTD_H)
CHECK_FUNCTION_EXISTS(vprintf HAVE_VPRINTF)
#CHECK_FUNCTION_EXISTS(_mm_free HAVE__MM_FREE)
#CHECK_FUNCTION_EXISTS(_mm_malloc HAVE__MM_MALLOC)
# HAVE__RTC
# LT_OBJDIR
# NO_MINUS_C_MINUS_O
set(PACKAGE fftw)
set(PACKAGE_VERSION ${VER_MAJ}.${VER_MIN}.${VER_PT})
set(PACKAGE_BUGREPORT fftw@fftw.org)
set(PACKAGE_URL http://www.fftw.org)
set(PACKAGE_NAME ${PACKAGE})
set(PACKAGE_STRING ${PACKAGE}-${PACKAGE_VERSION})
set(PACKAGE_TARNAME ${PACKAGE})
# PTHREAD_CREATE_JOINABLE
CHECK_TYPE_SIZE(double SIZEOF_DOUBLE)
# SIZEOF_FFTW_R2R_KIND
CHECK_TYPE_SIZE(float SIZEOF_FLOAT)
CHECK_TYPE_SIZE(int SIZEOF_INT)
CHECK_TYPE_SIZE(long SIZEOF_LONG)
CHECK_TYPE_SIZE("long long" SIZEOF_LONG_LONG)
# SIZEOF_MPI_FINT
CHECK_TYPE_SIZE(ptrdiff_t SIZEOF_PTRDIFF_T)
CHECK_TYPE_SIZE(size_t SIZEOF_SIZE_T)
CHECK_TYPE_SIZE("unsigned int" SIZEOF_UNSIGNED_INT)
CHECK_TYPE_SIZE("unsigned long" SIZEOF_UNSIGNED_LONG)
CHECK_TYPE_SIZE("unsigned long long" SIZEOF_UNSIGNED_LONG_LONG)
CHECK_TYPE_SIZE("void*" SIZEOF_VOID_P)
# STACK_DIRECTION
set(STDC_HEADERS 1)
# TIME_WITH_SYS_TIME
# USING_POSIX_THREADS
set(VERSION ${PACKAGE_VERSION})
# WINDOWS_F77_MANGLING
# WITH_G77_WRAPPERS
set(WITH_OUR_MALLOC 1)
# WITH_SLOW_TIMER
if(NOT DEFINED C_INLINE)
  # test how compiler defines inline (like autoconf's AC_C_INLINE)
  # http://www.cmake.org/pipermail/cmake/2007-September/016285.html
  message(STATUS "Determining inline definition")
  file(WRITE ${CMAKE_BINARY_DIR}/CMakeFiles/test_inline.c
    "/* Test source lifted from autoconf/c.m4 */\n"
    "typedef int foo_t;\n"
    "static inline foo_t static_foo() { return 0; }\n"
    "foo_t foo() { return 0; }\n"
    "int main(int argc, char* argv[]) { return 0; }\n"
    )
  set(C_INLINE_KEYWORD " ")
  foreach(KEYWORD inline __inline__ __inline)
    try_compile(C_HAS_${KEYWORD} ${CMAKE_BINARY_DIR}
      ${CMAKE_BINARY_DIR}/CMakeFiles/test_inline.c
      COMPILE_DEFINITIONS "-Dinline=${KEYWORD}"
      )
    if(C_HAS_${KEYWORD})
      set(C_INLINE TRUE CACHE INTERNAL "test_inline: boolean")
      set(C_INLINE_KEYWORD ${KEYWORD} CACHE INTERNAL "test_inline: keyword")
    endif()
  endforeach()
  if(C_INLINE)
    message(STATUS "Determining inline definition - done")
  else()
    message(STATUS "Determining inline definition - failed")
  endif()
endif(NOT DEFINED C_INLINE)
set(inline ${C_INLINE_KEYWORD})
configure_file(config.h.in ${lib_dir}/config.h)
